{"version":3,"sources":["hooks/useLocalStorage.ts","pages/ConfigPage.tsx","pages/HomePage.tsx","organisms/SurveyEnd.tsx","organisms/SurveyForm.tsx","organisms/SurveyStart.tsx","utils/number.ts","organisms/SurveyWait.tsx","pages/SurveyPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useLocalStorage","key","init","readValue","item","window","localStorage","getItem","JSON","parse","error","console","warn","useState","currentValue","setCurrentValue","useEffect","handleStorageChange","addEventListener","value","nextValue","Function","setItem","stringify","dispatchEvent","Event","defaultConfigItem","name","info","minLabel","maxLabel","ConfigItemForm","index","onChangeConfig","savedHandler","useRef","current","config","setConfig","Grid","container","spacing","direction","Typography","variant","TextField","label","fullWidth","required","defaultValue","onChange","event","state","target","xs","defaultConfig","repeats","items","ConfigPage","history","useHistory","open","setOpen","AppBar","position","Toolbar","IconButton","color","edge","onClick","push","Home","Container","maxWidth","style","marginTop","Paper","padding","borderRadius","justifyContent","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","component","type","hidden","accept","files","text","then","prev","Number","map","next","i","href","encodeURIComponent","download","replace","HomePage","flexGrow","disabled","length","SurveyEnd","id","results","values","saved","setSaved","entries","SurveyForm","onComplete","step","setStep","setValues","Slider","track","_","Array","isArray","asNumber","marks","MobileStepper","steps","activeStep","nextButton","size","KeyboardArrowRight","backButton","KeyboardArrowLeft","backgroundColor","SurveyStart","onStart","setId","match","SurveyWait","last","onContinue","SurveyPage","repeat","mode","setState","result","App","CssBaseline","exact","path","bottom","right","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7beedde.chunk.js","sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\n\nexport type SetValue<T> = Dispatch<SetStateAction<T>>;\n\nexport const useLocalStorage = <T extends unknown>(\n  key: string,\n  init: T\n): [T, SetValue<T>] => {\n  const readValue = (): T => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? (JSON.parse(item) as T) : init;\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error);\n      return init;\n    }\n  };\n\n  const [currentValue, setCurrentValue] = useState<T>(readValue);\n  const setValue: SetValue<T> = (value) => {\n    try {\n      const nextValue = value instanceof Function ? value(currentValue) : value;\n      window.localStorage.setItem(key, JSON.stringify(nextValue));\n      setCurrentValue(nextValue);\n      window.dispatchEvent(new Event(\"local-storage\"));\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error);\n    }\n  };\n\n  useEffect(() => {\n    setCurrentValue(readValue());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setCurrentValue(readValue());\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n    window.addEventListener(\"local-storage\", handleStorageChange);\n\n    return () => {\n      window.addEventListener(\"storage\", handleStorageChange);\n      window.addEventListener(\"local-storage\", handleStorageChange);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return [currentValue, setValue];\n};\n\nexport const useLocalStorageValue = <T extends unknown>(\n  key: string,\n  init: T\n) => {\n  const [value] = useLocalStorage(key, init);\n  return value;\n};\n","import {\n  Dispatch,\n  Fragment,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  TextField,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\n\ninterface ConfigItem {\n  name: string;\n  info: string;\n  minLabel: string;\n  maxLabel: string;\n}\n\nconst defaultConfigItem = {\n  name: \"\",\n  info: \"\",\n  minLabel: \"\",\n  maxLabel: \"\",\n};\n\ninterface ConfigItemProps {\n  index: number;\n  item: ConfigItem;\n  onChangeConfig: (config: ConfigItem) => void;\n}\n\nconst ConfigItemForm = ({\n  index,\n  item: init = defaultConfigItem,\n  onChangeConfig,\n}: ConfigItemProps) => {\n  const savedHandler = useRef(onChangeConfig);\n\n  useEffect(() => {\n    savedHandler.current = onChangeConfig;\n  }, [onChangeConfig]);\n\n  const [config, setConfig] = useState<ConfigItem>(init);\n  useEffect(() => {\n    savedHandler.current(config);\n  }, [config]);\n\n  return (\n    <Grid container spacing={2} direction=\"column\">\n      <Grid item>\n        <Typography variant=\"h6\">項目{index}</Typography>\n      </Grid>\n\n      <Grid item>\n        <TextField\n          label=\"項目の名前\"\n          fullWidth\n          required\n          defaultValue={config.name}\n          onChange={(event) =>\n            setConfig((state) => ({ ...state, name: event.target.value }))\n          }\n        />\n      </Grid>\n\n      <Grid item>\n        <TextField\n          label=\"項目の説明\"\n          fullWidth\n          required\n          defaultValue={config.info}\n          onChange={(event) =>\n            setConfig((state) => ({ ...state, info: event.target.value }))\n          }\n        />\n      </Grid>\n\n      <Grid item>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              label=\"最小値のラベル\"\n              fullWidth\n              required\n              defaultValue={config.minLabel}\n              onChange={(event) =>\n                setConfig((state) => ({\n                  ...state,\n                  minLabel: event.target.value,\n                }))\n              }\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <TextField\n              label=\"最大値のラベル\"\n              fullWidth\n              required\n              defaultValue={config.maxLabel}\n              onChange={(event) =>\n                setConfig((state) => ({\n                  ...state,\n                  maxLabel: event.target.value,\n                }))\n              }\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport interface Config {\n  name: string;\n  repeats: number;\n  items: ConfigItem[];\n}\n\nexport const defaultConfig = {\n  name: \"\",\n  repeats: 1,\n  items: [],\n};\n\nexport interface ConfigPageProps {\n  config: Config;\n  setConfig: Dispatch<SetStateAction<Config>>;\n}\n\nexport const ConfigPage = ({ config, setConfig }: ConfigPageProps) => {\n  const history = useHistory();\n\n  const setName = (name: string) => setConfig((prev) => ({ ...prev, name }));\n\n  const setRepeats = (repeats: number) =>\n    setConfig((prev) => ({ ...prev, repeats }));\n\n  const setItem = (next: ConfigItem, index: number) =>\n    setConfig(({ items, ...prev }) => ({\n      ...prev,\n      items: items.map((item, i) => (index === i ? next : item)),\n    }));\n\n  const addItem = () =>\n    setConfig(({ items, ...prev }) => ({\n      ...prev,\n      items: [...items, defaultConfigItem],\n    }));\n\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            edge=\"start\"\n            onClick={() => history.push(\"/\")}\n          >\n            <Home />\n          </IconButton>\n\n          <Typography variant=\"h5\">VAS設定</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"sm\" style={{ marginTop: \"16px\" }}>\n        <Paper style={{ padding: \"16px\", borderRadius: 0 }}>\n          <Grid container spacing={2} direction=\"column\">\n            <Grid item>\n              <Grid container justifyContent=\"space-between\">\n                <Grid item>\n                  <Typography variant=\"h6\">基本設定</Typography>\n                </Grid>\n\n                <Grid item>\n                  <Grid container spacing={2}>\n                    <Grid item>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => setOpen(true)}\n                      >\n                        設定を消去\n                      </Button>\n\n                      <Dialog open={open}>\n                        <DialogTitle>設定を消去</DialogTitle>\n\n                        <DialogContent>\n                          <DialogContentText>\n                            設定を消去すると元に戻せません。本当に消去しますか？\n                          </DialogContentText>\n                        </DialogContent>\n\n                        <DialogActions>\n                          <Button\n                            color=\"primary\"\n                            onClick={() => setOpen(false)}\n                          >\n                            やめる\n                          </Button>\n                          <Button\n                            color=\"secondary\"\n                            onClick={() => {\n                              setConfig(defaultConfig);\n                              setOpen(false);\n                            }}\n                          >\n                            消去する\n                          </Button>\n                        </DialogActions>\n                      </Dialog>\n                    </Grid>\n\n                    <Grid item>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        component=\"label\"\n                      >\n                        設定を復元\n                        <input\n                          type=\"file\"\n                          hidden\n                          accept=\"application/json\"\n                          onChange={(event) => {\n                            if (event.target.files) {\n                              const file = event.target.files[0];\n                              file\n                                .text()\n                                .then((text) =>\n                                  setConfig(JSON.parse(text) as Config)\n                                );\n                            }\n                          }}\n                        />\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <Grid item>\n              <TextField\n                label=\"実験名\"\n                fullWidth\n                required\n                value={config.name}\n                onChange={(event) => setName(event.target.value)}\n              />\n            </Grid>\n\n            <Grid item>\n              <TextField\n                label=\"繰り返し回数\"\n                fullWidth\n                required\n                value={config.repeats}\n                onChange={(event) => setRepeats(Number(event.target.value))}\n              />\n            </Grid>\n\n            {config.items.map((item, index) => (\n              <Grid item key={index}>\n                <ConfigItemForm\n                  index={index + 1}\n                  item={item}\n                  onChangeConfig={(next) => setItem(next, index)}\n                />\n              </Grid>\n            ))}\n\n            <Grid item>\n              <Grid container justifyContent=\"space-between\">\n                <Grid item>\n                  <Grid container spacing={2}>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        href={`data:application/json,${encodeURIComponent(\n                          JSON.stringify(config, null, 2)\n                        )}`}\n                        download={\n                          config.name === \"\"\n                            ? \"config.json\"\n                            : `${config.name.replace(/\\s/, \"_\")}.json`\n                        }\n                      >\n                        設定を保存\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Button variant=\"contained\" color=\"default\" onClick={addItem}>\n                    項目を追加\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    </Fragment>\n  );\n};\n","import { Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  Paper,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\n\nimport { Config } from \"./ConfigPage\";\n\nexport interface HomePageProps {\n  config: Config;\n}\n\nexport const HomePage = ({ config }: HomePageProps) => {\n  const history = useHistory();\n\n  return (\n    <Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton color=\"inherit\" edge=\"start\">\n            <Home />\n          </IconButton>\n\n          <Typography variant=\"h5\" style={{ flexGrow: 1 }}>\n            VASアプリ\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"xs\" style={{ marginTop: \"16px\" }}>\n        <Paper style={{ padding: \"16px\", borderRadius: 0 }}>\n          <Grid container spacing={2} direction=\"column\">\n            <Grid item>\n              <Typography variant=\"h6\">VAS管理画面</Typography>\n            </Grid>\n\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                color=\"default\"\n                fullWidth\n                onClick={() => history.push(\"/config\")}\n              >\n                設定を編集\n              </Button>\n            </Grid>\n\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={() => history.push(\"/survey\")}\n                disabled={\n                  config.name === \"\" ||\n                  config.repeats === 0 ||\n                  config.items.length === 0\n                }\n              >\n                サーベイを実施\n              </Button>\n\n              <Typography variant=\"caption\">\n                VASの評価項目が設定されていないとサーベイを実施することはできません。\n              </Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    </Fragment>\n  );\n};\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Config } from \"pages/ConfigPage\";\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\n\nexport interface SurveyEndProps {\n  config: Config;\n  id: number;\n  results: number[][];\n}\n\nexport const SurveyEnd = ({\n  config,\n  id,\n  results: resultValues,\n}: SurveyEndProps) => {\n  const results = resultValues.map((values) =>\n    values.map((value, index) => ({\n      name: config.items[index].name,\n      value,\n    }))\n  );\n\n  const history = useHistory();\n\n  const [saved, setSaved] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <Typography variant=\"h5\">結果の確認</Typography>\n      </Grid>\n\n      <Grid item>\n        <Grid container spacing={2} justifyContent=\"flex-end\">\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              href={`data:application/json,${encodeURIComponent(\n                JSON.stringify({ id, results }, null, 2)\n              )}`}\n              download={`${config.name}-${id}.json`.replace(/\\s/, \"_\")}\n              onClick={() => setSaved(true)}\n            >\n              結果を保存\n            </Button>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => setOpen(true)}\n              disabled={!saved}\n            >\n              ホームに戻る\n            </Button>\n\n            <Dialog open={open}>\n              <DialogTitle>ホームに戻る</DialogTitle>\n\n              <DialogContent>\n                <DialogContentText>\n                  保存していない結果は消えてしまいます。本当にホームに戻りますか？\n                </DialogContentText>\n              </DialogContent>\n\n              <DialogActions>\n                <Button color=\"primary\" onClick={() => setOpen(false)}>\n                  やめる\n                </Button>\n                <Button color=\"secondary\" onClick={() => history.push(\"/\")}>\n                  ホームに戻る\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {results.map((entries, index) => (\n        <Grid item key={index}>\n          <Container>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <Typography variant=\"h6\">ラウンド{index + 1}</Typography>\n              </Grid>\n              {entries.map(({ name, value }, index) => (\n                <Grid item key={index}>\n                  <Grid container justifyContent=\"space-between\">\n                    <Grid item>\n                      <Typography variant=\"body1\">{name}</Typography>\n                    </Grid>\n\n                    <Grid item>\n                      <Typography variant=\"body1\">{value}</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import { useState } from \"react\";\n\nimport {\n  Button,\n  Container,\n  Grid,\n  MobileStepper,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\n\nimport { Config } from \"../pages/ConfigPage\";\n\nexport interface SurveyFormProps {\n  config: Config;\n  onComplete: (values: number[]) => void;\n}\n\nconst asNumber = (value: number | number[]): number => {\n  if (Array.isArray(value)) {\n    return value[0];\n  }\n  return value;\n};\n\nexport const SurveyForm = ({ config, onComplete }: SurveyFormProps) => {\n  const [step, setStep] = useState(0);\n  const [values, setValues] = useState(config.items.map(() => 50));\n\n  return (\n    <Grid container spacing={8} direction=\"column\">\n      <Grid item>\n        <Grid container spacing={2} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{config.items[step].name}</Typography>\n          </Grid>\n\n          <Grid item>\n            <Typography variant=\"subtitle1\">\n              {config.items[step].info}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item>\n        <Container maxWidth=\"sm\">\n          <Slider\n            track={false}\n            value={values[step]}\n            onChange={(_, next) =>\n              setValues((prev) =>\n                prev.map((value, i) => (step === i ? asNumber(next) : value))\n              )\n            }\n            marks={[\n              { value: 0, label: config.items[step].minLabel },\n              { value: 100, label: config.items[step].maxLabel },\n            ]}\n          />\n        </Container>\n      </Grid>\n\n      <Grid item>\n        <MobileStepper\n          position=\"static\"\n          variant=\"text\"\n          steps={config.items.length}\n          activeStep={step}\n          nextButton={\n            <Button\n              size=\"small\"\n              onClick={() => setStep((prev) => prev + 1)}\n              disabled={step === config.items.length - 1}\n            >\n              次へ\n              <KeyboardArrowRight />\n            </Button>\n          }\n          backButton={\n            <Button\n              size=\"small\"\n              onClick={() => setStep((prev) => prev - 1)}\n              disabled={step === 0}\n            >\n              <KeyboardArrowLeft />\n              戻る\n            </Button>\n          }\n          style={{ backgroundColor: \"transparent\" }}\n        />\n      </Grid>\n\n      <Grid item>\n        <Grid container justifyContent=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => onComplete(values)}\n            disabled={step !== config.items.length - 1}\n          >\n            回答を終了\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import { useState } from \"react\";\n\nimport { convertToNumber } from \"utils/number\";\n\nimport {\n  Button,\n  Grid,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n} from \"@material-ui/core\";\n\nexport interface SurveyStartProps {\n  onStart: (id: number) => void;\n}\n\nexport const SurveyStart = ({ onStart }: SurveyStartProps) => {\n  const [id, setId] = useState<number | null>(null);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Grid container spacing={2} direction=\"column\">\n      <Grid item>\n        <Typography variant=\"h5\">実験参加者番号入力</Typography>\n      </Grid>\n\n      <Grid item>\n        <TextField\n          label=\"実験参加者番号\"\n          fullWidth\n          onChange={(event) => setId(convertToNumber(event.target.value))}\n        />\n      </Grid>\n\n      <Grid item>\n        <Grid container justifyContent=\"flex-end\">\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n              disabled={id === null}\n            >\n              開始する\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open}>\n          <DialogTitle>サーベイを開始</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              実験参加者番号は「{id}」です。\n            </DialogContentText>\n          </DialogContent>\n\n          <DialogActions>\n            <Button color=\"secondary\" onClick={() => setOpen(false)}>\n              戻る\n            </Button>\n            <Button color=\"primary\" onClick={() => id !== null && onStart(id)}>\n              開始\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    </Grid>\n  );\n};\n","export const convertToNumber = (value: string): number | null =>\n  value.match(/^\\d+$/) ? Number(value) : null;\n","import { useState } from \"react\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\n\nexport interface SurveyWaitProps {\n  last: boolean;\n  onContinue: () => void;\n}\n\nexport const SurveyWait = ({ last, onContinue }: SurveyWaitProps) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Grid container spacing={2} direction=\"column\">\n      <Grid item>\n        <Typography variant=\"h5\">お疲れさまでした</Typography>\n      </Grid>\n\n      <Grid item>\n        <Typography variant=\"body1\">\n          ご回答ありがとうございました。指示があるまでそのままお待ち下さい。\n        </Typography>\n      </Grid>\n\n      <Grid item>\n        <Grid container justifyContent=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setOpen(true)}\n          >\n            次に進む\n          </Button>\n\n          <Dialog open={open}>\n            <DialogTitle>{last ? \"終了する\" : \"次に進む\"}</DialogTitle>\n\n            <DialogContent>\n              <DialogContentText>\n                監督者の指示なく進めないでください。\n              </DialogContentText>\n            </DialogContent>\n\n            <DialogActions>\n              <Button color=\"secondary\" onClick={() => setOpen(false)}>\n                やめる\n              </Button>\n              <Button color=\"primary\" onClick={onContinue}>\n                進む\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import { Fragment, useState } from \"react\";\n\nimport { SurveyEnd } from \"organisms/SurveyEnd\";\nimport { SurveyForm } from \"organisms/SurveyForm\";\nimport { SurveyStart } from \"organisms/SurveyStart\";\nimport { SurveyWait } from \"organisms/SurveyWait\";\n\nimport {\n  AppBar,\n  Container,\n  Paper,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { Config } from \"./ConfigPage\";\n\nexport interface SurveyPageProps {\n  config: Config;\n}\n\ninterface State {\n  results: number[][];\n  repeat: number;\n  mode: \"start\" | \"form\" | \"wait\" | \"end\";\n}\n\nexport const SurveyPage = ({ config }: SurveyPageProps) => {\n  const [id, setId] = useState(0);\n  const [state, setState] = useState<State>({\n    results: [],\n    repeat: 0,\n    mode: \"start\",\n  });\n\n  return (\n    <Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\" style={{ flexGrow: 1 }}>\n            VAS回答\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container\n        maxWidth={state.mode === \"form\" ? \"md\" : \"xs\"}\n        style={{ marginTop: \"16px\" }}\n      >\n        <Paper style={{ padding: \"16px\", borderRadius: 0 }}>\n          {state.mode === \"start\" && (\n            <SurveyStart\n              onStart={(id) => {\n                setId(id);\n                setState((prev) => ({ ...prev, mode: \"form\" }));\n              }}\n            />\n          )}\n\n          {state.mode === \"form\" && (\n            <SurveyForm\n              config={config}\n              onComplete={(result) => {\n                setState(({ results, repeat }) => ({\n                  results: [...results, result],\n                  repeat: repeat + 1,\n                  mode: \"wait\",\n                }));\n              }}\n            />\n          )}\n\n          {state.mode === \"wait\" && (\n            <SurveyWait\n              last={state.repeat === config.repeats}\n              onContinue={() => {\n                setState((prev) => ({\n                  ...prev,\n                  mode: state.repeat === config.repeats ? \"end\" : \"form\",\n                }));\n              }}\n            />\n          )}\n\n          {state.mode === \"end\" && (\n            <SurveyEnd config={config} id={id} results={state.results} />\n          )}\n        </Paper>\n      </Container>\n    </Fragment>\n  );\n};\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { useLocalStorage } from \"hooks/useLocalStorage\";\nimport { Config, ConfigPage, defaultConfig } from \"pages/ConfigPage\";\nimport { HomePage } from \"pages/HomePage\";\nimport { SurveyPage } from \"pages/SurveyPage\";\n\nimport { CssBaseline, Typography } from \"@material-ui/core\";\n\nconst App = () => {\n  const [config, setConfig] = useLocalStorage<Config>(\"config\", defaultConfig);\n\n  return (\n    <CssBaseline>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage config={config} />\n          </Route>\n\n          <Route exact path=\"/survey\">\n            <SurveyPage config={config} />\n          </Route>\n\n          <Route exact path=\"/config\">\n            <ConfigPage config={config} setConfig={setConfig} />\n          </Route>\n        </Switch>\n      </Router>\n      <div style={{ position: \"absolute\", bottom: \"5px\", right: \"5px\" }}>\n        <Typography variant=\"caption\" component=\"p\">\n          \"Clipboard Emoji\", by{\" \"}\n          <a href=\"https://twemoji.twitter.com/\">Twemoji</a>, licensed under{\" \"}\n          <a href=\"https://creativecommons.org/licenses/by/4.0/\">CC-BY 4.0.</a>\n        </Typography>\n      </div>\n    </CssBaseline>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}